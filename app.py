import streamlit as st
from datetime import datetime
import os
from calculator import OncologyFollowUpCalculator

st.set_page_config(page_title="–û–Ω–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø–ª–∞–Ω –Ω–∞–±–ª—é–¥–µ–Ω–∏—è", page_icon="üóìÔ∏è", layout="wide")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
if not os.path.exists('observation_plan.json'):
    st.error("‚ùå –§–∞–π–ª 'observation_plan.json' –Ω–µ –Ω–∞–π–¥–µ–Ω! –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –∑–∞–≥—Ä—É–∂–µ–Ω.")
    st.stop()

st.title('üóìÔ∏è –ü–ª–∞–Ω –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è')
st.markdown("### –†–∞—Å—á–µ—Ç –≥—Ä–∞—Ñ–∏–∫–∞ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –ø–æ—Å–ª–µ —Ä–∞–¥–∏–∫–∞–ª—å–Ω–æ–≥–æ –ª–µ—á–µ–Ω–∏—è (–ø–µ—Ä–≤—ã–µ 3 –≥–æ–¥–∞)")

# –ü–æ–ª—è –¥–ª—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö
col1, col2, col3 = st.columns(3)
with col1:
    treatment_date = st.date_input('–î–∞—Ç–∞ —Ä–∞–¥–∏–∫–∞–ª—å–Ω–æ–≥–æ –ª–µ—á–µ–Ω–∏—è', datetime(2024, 1, 15))
with col2:
    stage = st.selectbox('–°—Ç–∞–¥–∏—è –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è', ['I', 'II', 'III', 'IV'])
with col3:
    current_date = st.date_input('–¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞', datetime.now())

if st.button('–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –ø–ª–∞–Ω –Ω–∞–±–ª—é–¥–µ–Ω–∏—è', type="primary"):
    try:
        calculator = OncologyFollowUpCalculator('observation_plan.json')
        treat_str = treatment_date.strftime('%d.%m.%Y')
        curr_str = current_date.strftime('%d.%m.%Y')
        visits = calculator.calculate_schedule(treat_str, stage, curr_str)
        
        if visits:
            # –†–∞–∑–¥–µ–ª—è–µ–º –Ω–∞ –ø—Ä–æ—à–µ–¥—à–∏–µ –∏ –±—É–¥—É—â–∏–µ –≤–∏–∑–∏—Ç—ã
            past_visits = [v for v in visits if v['is_past']]
            future_visits = [v for v in visits if not v['is_past']]
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±—É–¥—É—â–∏–µ –≤–∏–∑–∏—Ç—ã
            if future_visits:
                st.success(f'‚úÖ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ {len(future_visits)} –≤–∏–∑–∏—Ç–æ–≤:')
                
                for visit in future_visits:
                    with st.expander(f"üóìÔ∏è –í–∏–∑–∏—Ç {visit['visit_number']} - {visit['scheduled_date']} ({visit['months_after_treatment']} –º–µ—Å.) - {visit['visit_type']}", expanded=True):
                        # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–º–ø–∞–∫—Ç–Ω—ã–π —Å–ø–∏—Å–æ–∫ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π
                        exam_list = []
                        for exam in visit['examinations']:
                            # –°–æ–∫—Ä–∞—â–∞–µ–º –¥–ª–∏–Ω–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è
                            short_desc = exam['description']
                            if "–î–∏—Å–ø–∞–Ω—Å–µ—Ä–Ω—ã–π –ø—Ä–∏–µ–º" in short_desc:
                                short_desc = "–û—Å–º–æ—Ç—Ä –æ–Ω–∫–æ–ª–æ–≥–∞"
                            elif "–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è —Ç–æ–º–æ–≥—Ä–∞—Ñ–∏—è" in short_desc:
                                short_desc = "–ö–¢ –≥—Ä—É–¥–Ω–æ–π –∫–ª–µ—Ç–∫–∏"
                            elif "–£–ó–ò —Ä–µ–≥–∏–æ–Ω–∞—Ä–Ω—ã—Ö –ª–∏–º—Ñ–æ—É–∑–ª–æ–≤" in short_desc:
                                short_desc = "–£–ó–ò –ª–∏–º—Ñ–æ—É–∑–ª–æ–≤"
                            
                            exam_list.append(short_desc)
                        
                        # –í—ã–≤–æ–¥–∏–º –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –≤ –∫–æ–º–ø–∞–∫—Ç–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
                        st.write("**–û–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è:**")
                        for exam in exam_list:
                            st.write(f"- {exam}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—à–µ–¥—à–∏–µ –≤–∏–∑–∏—Ç—ã
            if past_visits:
                st.info(f'üìã –ó–∞–≤–µ—Ä—à–µ–Ω–æ {len(past_visits)} –≤–∏–∑–∏—Ç–æ–≤:')
                
                for visit in past_visits:
                    with st.expander(f"‚úÖ –í–∏–∑–∏—Ç {visit['visit_number']} - {visit['scheduled_date']} ({visit['months_after_treatment']} –º–µ—Å.) - {visit['visit_type']}", expanded=False):
                        # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–º–ø–∞–∫—Ç–Ω—ã–π —Å–ø–∏—Å–æ–∫ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π
                        exam_list = []
                        for exam in visit['examinations']:
                            # –°–æ–∫—Ä–∞—â–∞–µ–º –¥–ª–∏–Ω–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è
                            short_desc = exam['description']
                            if "–î–∏—Å–ø–∞–Ω—Å–µ—Ä–Ω—ã–π –ø—Ä–∏–µ–º" in short_desc:
                                short_desc = "–û—Å–º–æ—Ç—Ä –æ–Ω–∫–æ–ª–æ–≥–∞"
                            elif "–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è —Ç–æ–º–æ–≥—Ä–∞—Ñ–∏—è" in short_desc:
                                short_desc = "–ö–¢ –≥—Ä—É–¥–Ω–æ–π –∫–ª–µ—Ç–∫–∏"
                            elif "–£–ó–ò —Ä–µ–≥–∏–æ–Ω–∞—Ä–Ω—ã—Ö –ª–∏–º—Ñ–æ—É–∑–ª–æ–≤" in short_desc:
                                short_desc = "–£–ó–ò –ª–∏–º—Ñ–æ—É–∑–ª–æ–≤"
                            
                            exam_list.append(short_desc)
                        
                        # –í—ã–≤–æ–¥–∏–º –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –≤ –∫–æ–º–ø–∞–∫—Ç–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
                        st.write("**–í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è:**")
                        for exam in exam_list:
                            st.write(f"- {exam}")
            
            # –°–≤–æ–¥–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            st.success(f"üìä –í—Å–µ–≥–æ –≤ –ø–ª–∞–Ω–µ: {len(visits)} –≤–∏–∑–∏—Ç–æ–≤. –ü—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö: {len(future_visits)}, –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö: {len(past_visits)}")
            
            # –í–∏–∑—É–∞–ª—å–Ω–∞—è –≤—Ä–µ–º–µ–Ω–Ω–∞—è —à–∫–∞–ª–∞
            st.markdown("### üìÖ –í—Ä–µ–º–µ–Ω–Ω–∞—è —à–∫–∞–ª–∞ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è")
            timeline_cols = st.columns(min(6, len(visits)))
            
            for i, visit in enumerate(visits):
                if i < 6:  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏
                    with timeline_cols[i]:
                        status = "‚úÖ" if visit['is_past'] else "üü¢"
                        st.markdown(f"{status} **–í–∏–∑–∏—Ç {visit['visit_number']}**")
                        st.caption(visit['scheduled_date'])
            
        else:
            st.info('‚ÑπÔ∏è –ù–∞ —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.')
            
    except Exception as e:
        st.error(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")

# –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
st.sidebar.markdown("## üìä –û—Ö–≤–∞—Ç –Ω–∞–±–ª—é–¥–µ–Ω–∏—è")
st.sidebar.info("""
–≠—Ç–æ—Ç –ø–ª–∞–Ω –æ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –ø–µ—Ä–≤—ã–µ 3 –≥–æ–¥–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è:

- **1-–π –≥–æ–¥:** –µ–∂–µ–∫–≤–∞—Ä—Ç–∞–ª—å–Ω—ã–µ –æ—Å–º–æ—Ç—Ä—ã
- **2-–π –≥–æ–¥:** –æ—Å–º–æ—Ç—Ä—ã –∫–∞–∂–¥—ã–µ 6 –º–µ—Å—è—Ü–µ–≤  
- **3-–π –≥–æ–¥:** –µ–∂–µ–≥–æ–¥–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å

–î–∞—Ç—ã –≤–∏–∑–∏—Ç–æ–≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É—é—Ç—Å—è –Ω–∞ —Ä–∞–±–æ—á–∏–µ –¥–Ω–∏.
""")

# –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
with st.sidebar.expander("‚ÑπÔ∏è –°–æ–∫—Ä–∞—â–µ–Ω–∏—è –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π"):
    st.write("""
    - **–û—Å–º–æ—Ç—Ä –æ–Ω–∫–æ–ª–æ–≥–∞:** –î–∏—Å–ø–∞–Ω—Å–µ—Ä–Ω—ã–π –ø—Ä–∏–µ–º –≤—Ä–∞—á–∞-–æ–Ω–∫–æ–ª–æ–≥–∞
    - **–ö–¢ –≥—Ä—É–¥–Ω–æ–π –∫–ª–µ—Ç–∫–∏:** –ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è —Ç–æ–º–æ–≥—Ä–∞—Ñ–∏—è –æ—Ä–≥–∞–Ω–æ–≤ –≥—Ä—É–¥–Ω–æ–π –∫–ª–µ—Ç–∫–∏
    - **–£–ó–ò –ª–∏–º—Ñ–æ—É–∑–ª–æ–≤:** –£–ó–ò —Ä–µ–≥–∏–æ–Ω–∞—Ä–Ω—ã—Ö –ª–∏–º—Ñ–æ—É–∑–ª–æ–≤
    - **–ú–†–¢ –º–æ–∑–≥–∞:** –ú–†–¢ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–æ–∑–≥–∞
    - **–û–Ω–∫–æ–º–∞—Ä–∫–µ—Ä—ã:** –ê–Ω–∞–ª–∏–∑ –∫—Ä–æ–≤–∏ –Ω–∞ –æ–Ω–∫–æ–º–∞—Ä–∫–µ—Ä—ã
    """)
