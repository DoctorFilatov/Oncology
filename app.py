import streamlit as st
from datetime import datetime
import os
from calculator import OncologyFollowUpCalculator

st.set_page_config(page_title="–û–Ω–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø–ª–∞–Ω –Ω–∞–±–ª—é–¥–µ–Ω–∏—è", page_icon="üóìÔ∏è", layout="wide")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
if not os.path.exists('observation_plan.json'):
    st.error("‚ùå –§–∞–π–ª 'observation_plan.json' –Ω–µ –Ω–∞–π–¥–µ–Ω! –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –∑–∞–≥—Ä—É–∂–µ–Ω.")
    st.stop()

st.title('üóìÔ∏è –ü–ª–∞–Ω –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è')
st.markdown("### –†–∞—Å—á–µ—Ç –≥—Ä–∞—Ñ–∏–∫–∞ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –ø–æ—Å–ª–µ —Ä–∞–¥–∏–∫–∞–ª—å–Ω–æ–≥–æ –ª–µ—á–µ–Ω–∏—è (–ø–µ—Ä–≤—ã–µ 3 –≥–æ–¥–∞)")

# –ü–æ–ª—è –¥–ª—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö
col1, col2, col3 = st.columns(3)
with col1:
    treatment_date = st.date_input('–î–∞—Ç–∞ —Ä–∞–¥–∏–∫–∞–ª—å–Ω–æ–≥–æ –ª–µ—á–µ–Ω–∏—è', datetime(2024, 1, 15))
with col2:
    stage = st.selectbox('–°—Ç–∞–¥–∏—è –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è', ['I', 'II', 'III', 'IV'])
with col3:
    current_date = st.date_input('–¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞', datetime.now())

if st.button('–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –ø–ª–∞–Ω –Ω–∞–±–ª—é–¥–µ–Ω–∏—è', type="primary"):
    try:
        calculator = OncologyFollowUpCalculator('observation_plan.json')
        treat_str = treatment_date.strftime('%d.%m.%Y')
        curr_str = current_date.strftime('%d.%m.%Y')
        plan = calculator.calculate_schedule(treat_str, stage, curr_str)
        
        if plan:
            # –†–∞–∑–¥–µ–ª—è–µ–º –Ω–∞ –ø—Ä–æ—à–µ–¥—à–∏–µ –∏ –±—É–¥—É—â–∏–µ –≤–∏–∑–∏—Ç—ã
            past_visits = [v for v in plan if v['is_past']]
            future_visits = [v for v in plan if not v['is_past']]
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±—É–¥—É—â–∏–µ –≤–∏–∑–∏—Ç—ã
            if future_visits:
                st.success(f'‚úÖ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ {len(future_visits)} –≤–∏–∑–∏—Ç–æ–≤:')
                
                # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –≥–æ–¥–∞–º
                future_by_years = {}
                for visit in future_visits:
                    year = (visit['months_after_treatment'] // 12) + 1
                    if year not in future_by_years:
                        future_by_years[year] = []
                    future_by_years[year].append(visit)
                
                # –í—ã–≤–æ–¥–∏–º –±—É–¥—É—â–∏–µ –≤–∏–∑–∏—Ç—ã –ø–æ –≥–æ–¥–∞–º
                for year, visits in future_by_years.items():
                    st.markdown(f"### {year}-–π –≥–æ–¥ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è (–±—É–¥—É—â–∏–µ –≤–∏–∑–∏—Ç—ã)")
                    
                    for visit in visits:
                        with st.expander(f"üóìÔ∏è –í–∏–∑–∏—Ç {visit['visit_number']} - {visit['scheduled_date']} ({visit['months_after_treatment']} –º–µ—Å.)"):
                            st.write(f"**–¢–∏–ø –≤–∏–∑–∏—Ç–∞:** {visit['visit_type']}")
                            st.write(f"**–ö–æ–¥ —É—Å–ª—É–≥–∏:** {visit['code']}")
                            st.write(f"**–û–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ:** {visit['description']}")
                            if visit.get('condition'):
                                st.write(f"**–£—Å–ª–æ–≤–∏–µ:** –¥–ª—è —Å—Ç–∞–¥–∏–π {visit['condition']['value']}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—à–µ–¥—à–∏–µ –≤–∏–∑–∏—Ç—ã (—Å–≤–µ—Ä–Ω—É—Ç–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
            if past_visits:
                with st.expander(f"üìã –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—à–µ–¥—à–∏–µ –≤–∏–∑–∏—Ç—ã ({len(past_visits)})"):
                    st.info(f'–ó–∞–≤–µ—Ä—à–µ–Ω–æ {len(past_visits)} –≤–∏–∑–∏—Ç–æ–≤:')
                    for visit in past_visits:
                        st.write(f"~~{visit['scheduled_date']} - {visit['description']}~~")
            
            # –°–≤–æ–¥–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            st.success(f"üìä –í—Å–µ–≥–æ –≤ –ø–ª–∞–Ω–µ: {len(plan)} –≤–∏–∑–∏—Ç–æ–≤. –ü—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö: {len(future_visits)}")
            
        else:
            st.info('‚ÑπÔ∏è –ù–∞ —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.')
            
    except Exception as e:
        st.error(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")

# –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
st.sidebar.markdown("## üìä –û—Ö–≤–∞—Ç –Ω–∞–±–ª—é–¥–µ–Ω–∏—è")
st.sidebar.info("""
–≠—Ç–æ—Ç –ø–ª–∞–Ω –æ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –ø–µ—Ä–≤—ã–µ 3 –≥–æ–¥–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è:

- **1-–π –≥–æ–¥:** –µ–∂–µ–∫–≤–∞—Ä—Ç–∞–ª—å–Ω—ã–µ –æ—Å–º–æ—Ç—Ä—ã
- **2-–π –≥–æ–¥:** –æ—Å–º–æ—Ç—Ä—ã –∫–∞–∂–¥—ã–µ 6 –º–µ—Å—è—Ü–µ–≤  
- **3-–π –≥–æ–¥:** –µ–∂–µ–≥–æ–¥–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å

–î–∞—Ç—ã –≤–∏–∑–∏—Ç–æ–≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É—é—Ç—Å—è –Ω–∞ —Ä–∞–±–æ—á–∏–µ –¥–Ω–∏.
""")

# –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
with st.sidebar.expander("‚ÑπÔ∏è –û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏"):
    st.write("""
    –≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –ø–ª–∞–Ω –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è 
    –æ–Ω–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –ø–æ—Å–ª–µ —Ä–∞–¥–∏–∫–∞–ª—å–Ω–æ–≥–æ –ª–µ—á–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–ª–∏–Ω–∏—á–µ—Å–∫–∏—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π.
    
    –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
    - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –±—É–¥—É—â–∏–µ –≤–∏–∑–∏—Ç—ã
    - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ—Ç –¥–∞—Ç—ã –Ω–∞ —Ä–∞–±–æ—á–∏–µ –¥–Ω–∏
    - –£—á–∏—Ç—ã–≤–∞–µ—Ç —Å—Ç–∞–¥–∏—é –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è –ø—Ä–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è—Ö
    """)
